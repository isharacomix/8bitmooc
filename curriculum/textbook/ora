= ORA: bitwise OR with Accumulator

|=Addressing Mode |=Opcode Syntax |=In Hex |=Length |=Cycles |
|Immediate        |`ORA #$44`     |$09     | 2      | 2      |
|Zero Page        |`ORA $44`      |$05     | 2      | 3      |
|Zero Page,X      |`ORA $44,X`    |$15     | 2      | 4      |
|Absolute         |`ORA $4400`    |$0D     | 3      | 4      |
|Absolute,X       |`ORA $4400,X`  |$1D     | 3      | 4+     |
|Absolute,Y       |`ORA $4400,Y`  |$19     | 3      | 4+     |
|Indirect,X       |`ORA ($44,X)`  |$01     | 2      | 6      |
|Indirect,Y       |`ORA ($44),Y`  |$11     | 2      | 5+     |

**Flags affected:** S Z

This opcode takes the argument and performs a bitwise OR with the
[[Accumulator]], storing it in the register.

The OR function takes two truth values and returns true whenever at least one of
the inputs are true. If both inputs are false, the result is false. The bitwise OR
performs an OR function on all eight bits of the input argument and the
Accumulator, storing the final value for each bit in the Accumulator.

=== Example
{{{
           11110000
        OR 00111100
           --------
           11111100
}}}

